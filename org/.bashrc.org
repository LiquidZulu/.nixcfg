#+title: .bashrc
#+PROPERTY: header-args :tangle ~/.bashrc

* Environment Variables
** PATH
#+begin_src bash
export PATH=$PATH:~/.emacs.d/bin
#+end_src
** Allow Unfree Nix Packages
#+begin_src bash
export NIXPKGS_ALLOW_UNFREE=1
#+end_src
* Aliases
** ls
#+begin_src bash
alias ll="ls -al --color=auto"
alias ls="ls -a --color=auto"
#+end_src
** yt-dlp
#+begin_src bash
alias yta-aac="yt-dlp --extract-audio --audio-format aac "
alias yta-best="yt-dlp --extract-audio --audio-format best "
alias yta-flac="yt-dlp --extract-audio --audio-format flac "
alias yta-mp3="yt-dlp --extract-audio --audio-format mp3 "
alias ytv-best="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 "
#+end_src
** nix
#+begin_src bash
alias nenv="nix-env"
alias rebuild="sudo nixos-rebuild"
alias update="sudo nixos-rebuild switch --flake ~/.nixcfg"
alias devshell="nix --experimental-features 'nix-command flakes' develop"
#+end_src
* Archive Extractor
Taken from [[https://github.com/arcolinux/arcolinux-root/blob/master/etc/skel/.bashrc-latest][here]], usage: =ex <file>=.
#+begin_src bash
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      ,*.tar.bz2)   tar xjf $1   ;;
      ,*.tar.gz)    tar xzf $1   ;;
      ,*.bz2)       bunzip2 $1   ;;
      ,*.rar)       unrar x $1   ;;
      ,*.gz)        gunzip $1    ;;
      ,*.tar)       tar xf $1    ;;
      ,*.tbz2)      tar xjf $1   ;;
      ,*.tgz)       tar xzf $1   ;;
      ,*.zip)       unzip $1     ;;
      ,*.Z)         uncompress $1;;
      ,*.7z)        7z x $1      ;;
      ,*.deb)       ar x $1      ;;
      ,*.tar.xz)    tar xf $1    ;;
      ,*.tar.zst)   tar xf $1    ;;
      ,*)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
#+end_src
* vterm configuration
See [[https://github.com/akermu/emacs-libvterm#shell-side-configuration][here]] for details.
#+begin_src bash
vterm_printf() {
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
#+end_src
* Launch Script
#+begin_src bash
cbonsai -p
#neofetch
#screenfetch
#alsi
#paleofetch
#fetch
#hfetch
#sfetch
#ufetch
#ufetch-arco
#pfetch
#sysinfo
#sysinfo-retro
#cpufetch
#colorscript random
#+end_src
